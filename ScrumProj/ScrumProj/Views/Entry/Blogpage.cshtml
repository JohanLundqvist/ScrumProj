@model ScrumProj.Models.EntryViewModel

@if(User.Identity.IsAuthenticated){
    ViewBag.Title = "Blogpage";
    Layout = "~/Views/Shared/_navbarSignedIn.cshtml";

}

<div class="row">
    <div class="col-md-4">
        <h2>Formella blogg</h2>
        @if (Model.ListOfEntriesToLoopInBlogView != null || Model.ListOfEntriesToLoopInBlogView.Count > 0)
        {
            foreach (var FormalEntry in Model.ListOfEntriesToLoopInBlogView)
            {
                <div class="card mb-1">
                    <h3 class="card-header">@FormalEntry.entry.Title</h3>
                    <h5 class="card-header">
                        @FormalEntry.entry.Author
                        @if (FormalEntry.entry.AuthorId == Model.loggedInUser.ID)
                        {
                            <a href="#" class="card-link"><small style="float:right">Redigera inlägg</small></a> <br />
                            <small style="float:right">@Html.ActionLink("Ta bort inlägg", "DeleteEntry")</small>
                        }
                    </h5>
                    @if (FormalEntry.entry.image != null)
                    {
                        <img style="height: 200px; width: 100%; display: block;" src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22318%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20318%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_158bd1d28ef%20text%20%7B%20fill%3Argba(255%2C255%2C255%2C.75)%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A16pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_158bd1d28ef%22%3E%3Crect%20width%3D%22318%22%20height%3D%22180%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22129.359375%22%20y%3D%2297.35%22%3EImage%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E" alt="Card image">
                    }

                    <div class="card-body">
                        <p class="card-text">@FormalEntry.entry.Content</p>
                        @if (FormalEntry.File != null)
                        {
                            @Html.ActionLink(FormalEntry.File.FileName, "DownLoadFile", new { id = FormalEntry.File.FileId })
                        }

                    </div>


                    @if (Model.ListOfComments != null)
                    {
                        foreach (var c in Model.ListOfComments)
                        {
                            if (c.EntryId == FormalEntry.entry.Id)
                            {
                                <div class="list-group">
                                    <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                                        <div class="d-flex w-100 justify-content-between">
                                            <h6 class="mb-1">@c.Author</h6>
                                        </div>
                                        <small class="mb-1">@c.comment</small>
                                    </a>
                                </div>
                            }
                        }
                    }

                    @using (Html.BeginForm("PostComment", "Entry", new { postId = FormalEntry.entry.Id }, FormMethod.Post, null))
                    {

                        @Html.TextBoxFor(c => c.comment, new { @class = "form-control" })

                        <input type="submit" class="btn btn-info" value="Kommentera" />
                    }
                </div>
            }
        }


        </div>

    <div class="col-md-4">
        <h2>Skriv inlägg</h2>
        @using (Html.BeginForm("PublishEntry", "Entry", FormMethod.Post, new {role ="form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(u => u.entry.Title)
            @Html.TextBoxFor(u => u.Title, new { @class = "form-control", id = "inputDefault" })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

        </div>
            <div class="form-control-static panel-primary">
                <div class="form-group">
                    <div>
                        @Html.TextAreaFor(u => u.entry.Content, new { @class = "form-control", @rows = "3", @style = "width" })
                    </div>
                </div>
                @Html.LabelFor(u => u.File.FileName)
                <div class="form-group">
                    <div>
                        <input type="file" id="newFile" name="newFile" />
                        <small id="fileHelp" class="form-text text-muted">högsta filstorlek tillåten är 25MB.</small>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <input type="submit" value="Posta inlägg" class="btn btn-info" style="float:right" />
                    </div>
                </div>
            </div>
        }
            </div>
    

        <div class="col-md-4">
            <h2>Informell blogg</h2>
        </div>

    </div>


