@using ScrumProj.Models.ViewModels
@using Microsoft.AspNet.Identity;
@model ScrumProj.Models.ViewModels.DevelopmentViewModel

@if (User.Identity.IsAuthenticated)
{
    ViewBag.Title = "DevelopmentWork";
    Layout = "~/Views/Shared/_navbarSignedIn.cshtml";

}

<h2>Skapa nytt projekt</h2>




<div class="col-sm">
    <div class="card mb-3" id="CreateProjectCard">
        @using (Html.BeginForm("PublishDevProject", "Development", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken();
            <div class="card-body">
                @Html.ValidationSummary("", new { @class = "text-danger" })
                <div class="row">
                    <div class="form-group col-md">
                        @Html.LabelFor(model => model.project.Title, htmlAttributes: new { @class = "control-label col-md-4" })

                        @Html.EditorFor(model => model.project.Title, new { htmlAttributes = new { @class = "form-control" } })

                    </div>
                    <div class="form-group col-md">
                        @Html.LabelFor(m => m.project.Cat)
                        @Html.EnumDropDownListFor(model => model.project.Cat, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                @Html.HiddenFor(m => m.project.Participants)
                <div class="form-group">
                    @Html.LabelFor(model => model.project.Content, htmlAttributes: new { @class = "control-label col-md-4" })

                    @Html.TextAreaFor(model => model.project.Content, new { rows = 10, @class = "form-control", style = "min-width:100%; resize:none;" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.project.Visibility)
                    @Html.EnumDropDownListFor(model => model.project.Visibility, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div style="padding-left:20px">
                    <input type="submit" id="Create" value="Skapa projekt" class="btn btn-info" />
                </div>
            </div>
        }
    </div>
    @*<div class=" col-8, text-white bg-secondary mb-3" id="AddParticipantsCard" style="max-width: 20rem;border: 1px solid white;">
            @using (Html.BeginForm("AddParticipants", "Development", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken();

                <div class="form-group">
                    @Html.LabelFor(model => model.project.Participants)
                    @Html.DropDownListFor(x => x.UserToAdd, new SelectList(Model.UsersFullName, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "DevelopmentViewModel" })
                </div>
                <div class="form-group">
                    <div>
                        <input type="submit" value="Bjud in" class="btn btn-info" />
                    </div>
                </div>
            }
            <div>
                <button id="Done" class="btn btn-info"> Klar </button>
            </div>
        </div>*@
</div>

<div class="col-sm">
    @for (int i = Model.projects.Count - 1; i >= 0; i--)
    {
        var project = Model.projects[i];
        foreach (var user in project.Participants)
        {
            if (project.Visibility == 0 || user.ID == User.Identity.GetUserId())

            {
                <div class="card mb-3">
                    <h2 class="card-header" style="color:white;">@project.Title</h2>
                    <div class="card-body">
                        <h5 class="card-title">@project.Cat</h5>
                        <hr />
                        <h6 class="card-subtitle text-muted"></h6>
                        <p class="card-text">@project.Content</p>
                    </div>
                    <ul class="d-md-inline-block" style="list-style-type: none; padding-left: 0px;">
                        @foreach (var projectUser in project.Participants)
                        {
                        <li style="float:left; padding:5px;">
                            <a href="#" class="list-group-item list-group-item-action flex-column align-items-start" style="padding: 5px; float:left">
                                <small class="mb-1">@projectUser.FirstName @projectUser.LastName</small>
                            </a>
                        </li>
                        }
                    </ul>
                    <div class="card-footer">
                        <a href="#" class="card-link">Uppladdad fil</a>

                        @foreach (var userr in project.Participants)
                        {
                            if (userr.Equals(Model.ActiveUser))
                            {
                                <a href="@Url.Action("EditDevelopmentPage", "Development", new { projectId = project.Id })" class="card-link" style="float:right;">Redigera</a>
                            }
                        }

                    </div>

                </div>

            }
        }
    }
</div>

<script src="~/Scripts/jquery-3.3.1.js"></script>
<script>
    $('#Create').on('click', function () {
        $('#CreateProjectCard').hide();
        $('#AddParticipantsCard').show();
    }
    );
    $('#Done').on('click', function () {
        $('#AddParticipantsCard').hide();
        $('#CreateProjectCard').show();
    }
    );
</script>